{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackButton.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","feedbackCounter","s","className","FeedbackButton","feedback","onLeaveFeedback","feedbackButton","type","onClick","FeedbackOptions","options","map","option","Section","title","children","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8BEC,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACvCC,EAAoBC,IAApBD,gBACR,OACE,qCACGF,EAAQ,GACP,qCACE,oBAAGI,UAAWF,EAAd,mBAAsCL,KACtC,oBAAGO,UAAWF,EAAd,sBAAyCJ,KACzC,oBAAGM,UAAWF,EAAd,kBAAqCH,KACrC,oBAAGK,UAAWF,EAAd,oBAAuCF,KACvC,oBAAGI,UAAWF,EAAd,gCAC+B,IAATL,EAAa,EAAII,EADvC,UAKO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0B,gBCG7BU,EAnBQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC1BC,EAAmBL,IAAnBK,eACR,OACE,wBACEJ,UAAWI,EACX,gBAAeF,EACfG,KAAK,SACLC,QAASH,EAJX,SAMGD,KCMQK,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAEER,SAAUQ,EACVP,gBAAiBA,GAFZO,OCUIC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACGD,GAAS,6BAAKA,IACdC,MCgDQC,E,4MAjDbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPqB,eAAiB,YAAiB,IACxBd,EADuB,EAAbe,OACUC,QAApBhB,SACR,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAAWkB,EAAUlB,GAAY,O,EAItCmB,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB2B,gCAAkC,WAChC,IAAQ7B,EAAS,EAAKsB,MAAdtB,KACFG,EAAQ,EAAKyB,qBACnB,OAAOzB,EAAQ2B,KAAKC,MAAO/B,EAAOG,EAAS,KAAO,G,4CAEpD,WACE,IACA,EAA+B6B,KAAKV,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ6B,KAAKJ,qBACbK,EAA6BD,KAAKH,kCACxC,OACE,qCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEJ,QARQ,CAAC,OAAQ,UAAW,OAS5BL,gBAAiBsB,KAAKT,mBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB6B,a,GA1CdC,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,gBAAkB,sC,kBCApCD,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.f314bca9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const { feedbackCounter } = s;\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <>\r\n          <p className={feedbackCounter}>Good: {good}</p>\r\n          <p className={feedbackCounter}>Neutral: {neutral}</p>\r\n          <p className={feedbackCounter}>Bad: {bad}</p>\r\n          <p className={feedbackCounter}>Total: {total}</p>\r\n          <p className={feedbackCounter}>\r\n            Positive feedback: {good === 0 ? 0 : positivePercentage}%\r\n          </p>\r\n        </>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  const { feedbackButton } = s;\r\n  return (\r\n    <button\r\n      className={feedbackButton}\r\n      data-feedback={feedback}\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nFeedbackButton.propTypes = {\r\n  feedback: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackButton from './FeedbackButton';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <FeedbackButton\r\n      key={option}\r\n      feedback={option}\r\n      onLeaveFeedback={onLeaveFeedback}\r\n    />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n  render() {\n    const options = ['good', 'neutral', 'bad'];\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackCounter\":\"Statistics_feedbackCounter__3Jqgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__2u5cK\"};"],"sourceRoot":""}